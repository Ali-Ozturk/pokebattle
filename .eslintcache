[{"C:\\Users\\Ali\\Documents\\Projects\\pokebattle\\src\\index.js":"1","C:\\Users\\Ali\\Documents\\Projects\\pokebattle\\src\\App.js":"2","C:\\Users\\Ali\\Documents\\Projects\\pokebattle\\src\\utils\\history.js":"3","C:\\Users\\Ali\\Documents\\Projects\\pokebattle\\src\\styles\\global-styles.js":"4","C:\\Users\\Ali\\Documents\\Projects\\pokebattle\\src\\components\\Pokebattle.js":"5","C:\\Users\\Ali\\Documents\\Projects\\pokebattle\\src\\data\\fighters.js":"6","C:\\Users\\Ali\\Documents\\Projects\\pokebattle\\src\\data\\abilities.js":"7","C:\\Users\\Ali\\Documents\\Projects\\pokebattle\\src\\components\\FighterList\\FighterList.js":"8","C:\\Users\\Ali\\Documents\\Projects\\pokebattle\\src\\store\\reducers\\index.js":"9","C:\\Users\\Ali\\Documents\\Projects\\pokebattle\\src\\store\\actions\\index.js":"10","C:\\Users\\Ali\\Documents\\Projects\\pokebattle\\src\\store\\reducers\\FighterReducer.js":"11","C:\\Users\\Ali\\Documents\\Projects\\pokebattle\\src\\store\\reducers\\BattleReducer.js":"12","C:\\Users\\Ali\\Documents\\Projects\\pokebattle\\src\\store\\types\\types.js":"13","C:\\Users\\Ali\\Documents\\Projects\\pokebattle\\src\\pages\\FighterSelectionScreen.js":"14","C:\\Users\\Ali\\Documents\\Projects\\pokebattle\\src\\pages\\TempPage.js":"15","C:\\Users\\Ali\\Documents\\Projects\\pokebattle\\src\\pages\\VersusScreen.js":"16","C:\\Users\\Ali\\Documents\\Projects\\pokebattle\\src\\components\\SpriteFigure.js":"17","C:\\Users\\Ali\\Documents\\Projects\\pokebattle\\src\\utils\\general.js":"18","C:\\Users\\Ali\\Documents\\Projects\\pokebattle\\src\\store\\reducers\\GlobalReducer.js":"19","C:\\Users\\Ali\\Documents\\Projects\\pokebattle\\src\\routes\\SelectedRoute.js":"20","C:\\Users\\Ali\\Documents\\Projects\\pokebattle\\src\\pages\\_layout\\DefualtScreenLayout.js":"21","C:\\Users\\Ali\\Documents\\Projects\\pokebattle\\src\\pages\\BattleScreen.js":"22","C:\\Users\\Ali\\Documents\\Projects\\pokebattle\\src\\components\\ActionList.js":"23","C:\\Users\\Ali\\Documents\\Projects\\pokebattle\\src\\components\\MoveList.js":"24"},{"size":197,"mtime":1607447275826,"results":"25","hashOfConfig":"26"},{"size":1190,"mtime":1614855483800,"results":"27","hashOfConfig":"26"},{"size":91,"mtime":1607446884416,"results":"28","hashOfConfig":"26"},{"size":886,"mtime":1616486617514,"results":"29","hashOfConfig":"26"},{"size":259,"mtime":1607447280249,"results":"30","hashOfConfig":"26"},{"size":1673,"mtime":1616486328997,"results":"31","hashOfConfig":"26"},{"size":469,"mtime":1614954658890,"results":"32","hashOfConfig":"26"},{"size":1662,"mtime":1616486183708,"results":"33","hashOfConfig":"26"},{"size":319,"mtime":1614844822438,"results":"34","hashOfConfig":"26"},{"size":1091,"mtime":1614933719534,"results":"35","hashOfConfig":"26"},{"size":572,"mtime":1614933588842,"results":"36","hashOfConfig":"26"},{"size":2085,"mtime":1614954378347,"results":"37","hashOfConfig":"26"},{"size":470,"mtime":1614954241010,"results":"38","hashOfConfig":"26"},{"size":524,"mtime":1614854603171,"results":"39","hashOfConfig":"26"},{"size":229,"mtime":1614854329885,"results":"40","hashOfConfig":"26"},{"size":2279,"mtime":1616451487892,"results":"41","hashOfConfig":"26"},{"size":506,"mtime":1616485775213,"results":"42","hashOfConfig":"26"},{"size":1016,"mtime":1614940093214,"results":"43","hashOfConfig":"26"},{"size":432,"mtime":1614933523742,"results":"44","hashOfConfig":"26"},{"size":1019,"mtime":1614846068226,"results":"45","hashOfConfig":"26"},{"size":313,"mtime":1616439660534,"results":"46","hashOfConfig":"26"},{"size":2971,"mtime":1616486968254,"results":"47","hashOfConfig":"26"},{"size":1381,"mtime":1614935154816,"results":"48","hashOfConfig":"26"},{"size":2542,"mtime":1614940251898,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"lo3fo2",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"52"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"52"},"C:\\Users\\Ali\\Documents\\Projects\\pokebattle\\src\\index.js",[],["103","104"],"C:\\Users\\Ali\\Documents\\Projects\\pokebattle\\src\\App.js",[],"C:\\Users\\Ali\\Documents\\Projects\\pokebattle\\src\\utils\\history.js",[],"C:\\Users\\Ali\\Documents\\Projects\\pokebattle\\src\\styles\\global-styles.js",[],"C:\\Users\\Ali\\Documents\\Projects\\pokebattle\\src\\components\\Pokebattle.js",[],["105","106"],"C:\\Users\\Ali\\Documents\\Projects\\pokebattle\\src\\data\\fighters.js",[],"C:\\Users\\Ali\\Documents\\Projects\\pokebattle\\src\\data\\abilities.js",[],"C:\\Users\\Ali\\Documents\\Projects\\pokebattle\\src\\components\\FighterList\\FighterList.js",[],"C:\\Users\\Ali\\Documents\\Projects\\pokebattle\\src\\store\\reducers\\index.js",[],"C:\\Users\\Ali\\Documents\\Projects\\pokebattle\\src\\store\\actions\\index.js",[],"C:\\Users\\Ali\\Documents\\Projects\\pokebattle\\src\\store\\reducers\\FighterReducer.js",[],"C:\\Users\\Ali\\Documents\\Projects\\pokebattle\\src\\store\\reducers\\BattleReducer.js",["107"],"import {\r\n    REMOVE_FIGHTER_FROM_OPPONENTS,\r\n    SET_MOVE,\r\n    SET_OPPONENT_FIGHTER,\r\n    SET_OPPONENT_FIGHTER_HEALTH,\r\n    SET_OPPONENTS\r\n} from \"../types/types\";\r\nimport update from 'immutability-helper';\r\n\r\nconst available_moves = {\r\n    \"select-move\": \"Default\",\r\n    \"select-ability\": \"Which attack do you want to use?\",\r\n}\r\n\r\nconst INITIAL_STATE = {\r\n    opponents: [],\r\n    move: \"select-move\",\r\n    opponent_fighter: null,\r\n    turn: \"player\" // can be player || computer\r\n}\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case SET_OPPONENTS:\r\n            let newTeamWithHp = [];\r\n            action.fighters.forEach(item => {\r\n                newTeamWithHp = [...newTeamWithHp, update(item, {current_hp: {$set: item.health}})];\r\n            })\r\n            return {...state, opponents: newTeamWithHp};\r\n\r\n        case SET_MOVE:\r\n            return {...state, move: action.move};\r\n\r\n        case SET_OPPONENT_FIGHTER:\r\n            const fighter = action.fighter ? action.fighter : state.opponents[0];\r\n            return {...state, opponent_fighter: fighter};\r\n\r\n        case SET_OPPONENT_FIGHTER_HEALTH:\r\n            let opponents = state.opponents;\r\n            let opponent_fighter = state.opponent_fighter;\r\n\r\n            if (opponent_fighter.id === action.fighter.id) {\r\n                opponent_fighter.current_hp = action.health;\r\n            }\r\n\r\n            opponents = opponents.map(fighter => {\r\n                if (fighter.id === action.fighter.id) {\r\n                    fighter.current_hp = action.health;\r\n                }\r\n                return fighter;\r\n            })\r\n            return {...state, opponents, opponent_fighter}\r\n\r\n        case REMOVE_FIGHTER_FROM_OPPONENTS:\r\n            const removed_fighter_list = [...state.opponents].filter(item => {\r\n                return item.id !== action.fighter.id\r\n            })\r\n            return {...state, opponents: removed_fighter_list}\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","C:\\Users\\Ali\\Documents\\Projects\\pokebattle\\src\\store\\types\\types.js",[],"C:\\Users\\Ali\\Documents\\Projects\\pokebattle\\src\\pages\\FighterSelectionScreen.js",[],"C:\\Users\\Ali\\Documents\\Projects\\pokebattle\\src\\pages\\TempPage.js",[],["108","109"],"C:\\Users\\Ali\\Documents\\Projects\\pokebattle\\src\\pages\\VersusScreen.js",[],"C:\\Users\\Ali\\Documents\\Projects\\pokebattle\\src\\components\\SpriteFigure.js",[],"C:\\Users\\Ali\\Documents\\Projects\\pokebattle\\src\\utils\\general.js",[],"C:\\Users\\Ali\\Documents\\Projects\\pokebattle\\src\\store\\reducers\\GlobalReducer.js",[],"C:\\Users\\Ali\\Documents\\Projects\\pokebattle\\src\\routes\\SelectedRoute.js",[],"C:\\Users\\Ali\\Documents\\Projects\\pokebattle\\src\\pages\\_layout\\DefualtScreenLayout.js",[],"C:\\Users\\Ali\\Documents\\Projects\\pokebattle\\src\\pages\\BattleScreen.js",["110","111"],"C:\\Users\\Ali\\Documents\\Projects\\pokebattle\\src\\components\\ActionList.js",[],"C:\\Users\\Ali\\Documents\\Projects\\pokebattle\\src\\components\\MoveList.js",["112"],"import React, {Component} from 'react';\r\nimport {Col, Row} from \"react-bootstrap\";\r\nimport {connect} from \"react-redux\";\r\nimport ability_data from \"../data/abilities\";\r\nimport {getMoveEffectivenessAndDamage} from \"../utils/general\";\r\nimport {removeOpponentFighter, setMove, setOpponentFighter, setOpponentFighterHealth} from \"../store/actions\";\r\n\r\nclass MoveList extends Component {\r\n    state = {\r\n        effectiveness: '',\r\n    }\r\n\r\n    handleMoveClicked = move => {\r\n        const {opponent_fighter} = this.props;\r\n        const {damage, effectiveness} = getMoveEffectivenessAndDamage(move, opponent_fighter);\r\n        const updatedHealth = opponent_fighter.current_hp - damage;\r\n\r\n        this.props.setOpponentFighterHealth(opponent_fighter, updatedHealth);\r\n        this.setState({effectiveness: effectiveness});\r\n\r\n        if (updatedHealth < 1) {\r\n            this.props.removeOpponentFighter(opponent_fighter);\r\n            this.props.backToDefaultMove();\r\n            this.props.setOpponentFighter();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {selected_fighter} = this.props;\r\n\r\n        return (\r\n            <>\r\n                <p className={'text-warning'}>{this.state.effectiveness}</p>\r\n                <Row>\r\n                    {selected_fighter.moves.map(move => {\r\n                        const moveDTO = ability_data.find(e => e.id === move);\r\n                        return (<button className={'btn btn-info my-2 px-5 py-2'}\r\n                                        onClick={() => this.handleMoveClicked(moveDTO)}>\r\n                            {moveDTO.title}\r\n                        </button>)\r\n                    })}\r\n                </Row>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        backToDefaultMove: () => {\r\n            dispatch(setMove(\"select-move\"));\r\n        },\r\n        setOpponentFighter: fighter => {\r\n            dispatch(setOpponentFighter(fighter));\r\n        },\r\n        setOpponentFighterHealth: (fighter, hp) => {\r\n            dispatch(setOpponentFighterHealth(fighter, hp));\r\n        },\r\n        removeOpponentFighter: fighter => {\r\n            dispatch(removeOpponentFighter(fighter));\r\n        }\r\n    }\r\n}\r\nconst mapStateToProps = ({fighter_selection, battle}) => {\r\n    const {selected_fighter} = fighter_selection;\r\n    const {opponent_fighter} = battle;\r\n\r\n    return {\r\n        selected_fighter,\r\n        opponent_fighter\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(MoveList);\r\n\r\n",{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","replacedBy":"116"},{"ruleId":"113","replacedBy":"117"},{"ruleId":"115","replacedBy":"118"},{"ruleId":"119","severity":1,"message":"120","line":10,"column":7,"nodeType":"121","messageId":"122","endLine":10,"endColumn":22},{"ruleId":"113","replacedBy":"123"},{"ruleId":"115","replacedBy":"124"},{"ruleId":"119","severity":1,"message":"125","line":3,"column":9,"nodeType":"121","messageId":"122","endLine":3,"endColumn":12},{"ruleId":"119","severity":1,"message":"126","line":3,"column":14,"nodeType":"121","messageId":"122","endLine":3,"endColumn":17},{"ruleId":"119","severity":1,"message":"125","line":2,"column":9,"nodeType":"121","messageId":"122","endLine":2,"endColumn":12},"no-native-reassign",["127"],"no-negated-in-lhs",["128"],["127"],["128"],"no-unused-vars","'available_moves' is assigned a value but never used.","Identifier","unusedVar",["127"],["128"],"'Col' is defined but never used.","'Row' is defined but never used.","no-global-assign","no-unsafe-negation"]